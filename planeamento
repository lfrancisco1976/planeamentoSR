<!DOCTYPE html>
<html lang="pt">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Planeamento Semanal</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      width: 100%;
      min-height: 100vh;
      background: #f9f9f9;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      overflow-x: hidden;
    }

    body {
      padding: 15px 10px;
    }

    *, *::before, *::after {
      box-sizing: border-box;
    }

    h2 {
      text-align: center;
      margin-bottom: 15px;
      color: #444;
      font-size: 1.8rem;
    }

    label, select, button {
      font-size: 1.1rem;
      width: 100%;
    }

    label {
      margin-bottom: 6px;
      padding-left: 5px;
      color: #333;
      display: block;
    }

    select, button {
      padding: 10px 14px;
      margin-bottom: 15px;
      border: 1px solid #ccc;
      border-radius: 5px;
      cursor: pointer;
      background: white;
      transition: background-color 0.3s;
    }

    select:hover, button:hover {
      background-color: #eef6fb;
    }

    button {
      font-weight: 600;
      margin-top: 10px;
    }

    .loader {
      display: none;
      border: 5px solid #f3f3f3;
      border-top: 5px solid #3498db;
      border-radius: 50%;
      width: 28px;
      height: 28px;
      animation: spin 1s linear infinite;
      margin: 15px auto 25px auto;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .bloco {
      background: white;
      padding: 15px 20px;
      margin-bottom: 20px;
      box-shadow: 0 1px 6px rgba(0,0,0,0.1);
      border-radius: 10px;
      width: 100%;
    }

    .titulo-bloco {
      font-weight: 700;
      font-size: 1.4rem;
      margin-bottom: 14px;
      color: #2c3e50;
      border-bottom: 3px solid #3498db;
      padding-bottom: 6px;
    }

    .servico-item {
      font-size: 1rem;
      padding: 10px 0;
      border-bottom: 1px solid #eee;
      display: flex;
      justify-content: flex-start;
      font-weight: 500;
      color: #555;
      gap: 14px;
      flex-wrap: wrap;
    }

    .servico-item:last-child {
      border-bottom: none;
    }

    .campo {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      text-align: center;
    }

    .campo.viatura, .campo.reboque {
      flex: 0 0 90px;
      min-width: 90px;
    }

    .campo.nei {
      flex: 0 0 11ch;
      min-width: 11ch;
      text-align: right;
    }

    .campo.servico {
      flex: 1 1 150px;
      white-space: normal;
      text-align: left;
      min-width: 150px;
    }

    @media (max-width: 480px) {
      .servico-item {
        font-size: 0.95rem;
        gap: 10px;
      }
      .campo.viatura, .campo.reboque {
        flex: 0 0 70px;
        min-width: 70px;
        font-size: 0.9rem;
      }
      .campo.nei {
        flex: 0 0 11ch;
        min-width: 11ch;
        font-size: 0.9rem;
      }
      .campo.servico {
        flex: 1 1 120px;
        min-width: 120px;
        font-size: 0.95rem;
      }
      select, button {
        font-size: 1rem;
        padding: 9px 12px;
      }
      .titulo-bloco {
        font-size: 1.25rem;
      }
    }
  </style>
</head>
<body>

  <h2>Planeamento Semanal</h2>

  <label for="motorista">Selecionar Motorista:</label>
  <select id="motorista" onchange="filtrarPorMotorista()">
    <option value="">-- Selecione --</option>
  </select>

  <button onclick="carregarDados()">Atualizar</button>
  <div class="loader" id="loader"></div>

  <div id="planeamento"></div>

  <script>
    const URL_DADOS = "https://script.google.com/macros/s/AKfycbzNTa9DnJTkLocDrHEpOw9E6q_SSrO4AJDs5I6f3CVAUjLkT55Dzxu4FXrDAePNxNKW3Q/exec";
    let dados = [];

    function carregarDados() {
      document.getElementById("loader").style.display = "block";
      fetch(URL_DADOS)
        .then(res => res.json())
        .then(json => {
          dados = json;
          popularMotoristas();
          filtrarPorMotorista();
        })
        .catch(err => alert("Erro ao carregar dados: " + err))
        .finally(() => document.getElementById("loader").style.display = "none");
    }

    function popularMotoristas() {
      const select = document.getElementById("motorista");
      const motoristas = [...new Set(dados.map(item => item["MOTORISTA"]))].sort();
      select.innerHTML = `<option value="">-- Selecione --</option>`;
      motoristas.forEach(motorista => {
        const opt = document.createElement("option");
        opt.value = motorista;
        opt.textContent = motorista;
        select.appendChild(opt);
      });
    }

    function formatarData(dataStr) {
      const meses = ["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"];
      const dt = new Date(dataStr);
      if (isNaN(dt)) return dataStr;
      return `${dt.getDate()}/${meses[dt.getMonth()]}`;
    }

    function filtrarPorMotorista() {
      const nome = document.getElementById("motorista").value;
      const content = document.getElementById("planeamento");
      content.innerHTML = "";

      if (!nome) return;

      const filtrados = dados.filter(item => item["MOTORISTA"] === nome);
      const porData = {};

      filtrados.forEach(item => {
        if (!porData[item["DATA"]]) porData[item["DATA"]] = [];
        porData[item["DATA"]].push(item);
      });

      Object.keys(porData).sort().forEach(data => {
        const bloco = document.createElement("div");
        bloco.className = "bloco";
        bloco.innerHTML = `<div class="titulo-bloco">${formatarData(data)}</div>`;

        porData[data].slice(0,4).forEach(serv => {
          const divItem = document.createElement("div");
          divItem.className = "servico-item";
          divItem.innerHTML = `
            <div class="campo viatura">${serv["VIATURA"]}</div>
            <div class="campo reboque">${serv["REBOQUE"]}</div>
            <div class="campo servico">${serv["SERVIÇO"]}</div>
            <div class="campo nei">${serv["NEI"]}</div>
          `;
          bloco.appendChild(divItem);
        });

        content.appendChild(bloco);
      });
    }

    // Tentar expandir iframe se possível
    try {
      if (window.frameElement) {
        window.frameElement.style.width = "100%";
        window.frameElement.style.maxWidth = "100vw";
      }
    } catch (e) {
      console.warn("Iframe expansion not allowed:", e);
    }

    carregarDados();
  </script>

</body>
</html>
